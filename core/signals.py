# core/signals.py

from django.db.models.signals import m2m_changed
from django.dispatch import receiver
from .models import Order
from .telegram import send_telegram_message


@receiver(m2m_changed, sender=Order.services.through)
def handle_order_services_change(sender, instance, action, **kwargs):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ m2m_changed –¥–ª—è –ø–æ–ª—è services –º–æ–¥–µ–ª–∏ Order.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —É—Å–ª—É–≥.
    """

    if action == "post_add":  # –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π —É—Å–ª—É–≥
            services = instance.services.all()
            services_list = "\n".join([f"- {service.name} ({service.price} ‚ÇΩ)" for service in services])

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Markdown
            message = (
                f"*üÜï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ —É—Å–ª—É–≥–∏*\n\n"
                f"*–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞:* {instance.client_name}\n"
                f"*–¢–µ–ª–µ—Ñ–æ–Ω:* {instance.phone}\n"
                f"*–ú–∞—Å—Ç–µ—Ä:* {instance.barber.get_full_name() or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                f"*–î–∞—Ç–∞ –∑–∞–ø–∏—Å–∏:* {instance.date.strftime('%d.%m.%Y %H:%M')}\n\n"
                f"*–í—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏:*\n{services_list}\n\n"
                f"–°—Å—ã–ª–∫–∞: [–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∞–¥–º–∏–Ω–∫–µ](http://127.0.0.1:8000/admin/core/order/{instance.id}/)"
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            send_telegram_message(message)

        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è] {e}")